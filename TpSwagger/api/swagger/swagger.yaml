swagger: '2.0'

################################################################################
#                              API Information                                 #
################################################################################
info:
  version: "1.0.0"
  title: TimePuncher
  contact:
    name: Hans Tschan
    url: http://timepuncher.ch
    email: hans.tschan@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
host: localhost:3000
basePath: /api/v1
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json

################################################################################
#                                  Security                                    #
################################################################################



################################################################################
#                                           Paths                              #
################################################################################
paths:
  /authenticate:
    post:
      description:
        Ein Benutzer authentifiziert sich mit Benutzername und Passwort
      summary: Sendet eine Authentifizierungsanfrage an den Server [AllowAnonymous]
      operationId: authenticate
      parameters:
        - name: credentials
          in: body
          required: true
          description: Eine ASCII-Zeichenfolge mit mindestens einem Zeichen.
          schema:
            $ref: '#/definitions/CredentialDto'
      tags:
        - Authentication
      responses:
        default:
          description: AuthResponse
          schema:
            $ref: '#/definitions/AuthResponse'
  /refreshtoken:
    post:
      description:
        Ein Benutzer erneuert den Token
      summary: Sendet eine RefreshToken Abfrage an den Server [AllowAnonymous]
      operationId: refreshtoken
      parameters:
        - name: refreshtokenparameter
          in: body
          required: true
          description: Eine ASCII-Zeichenfolge mit mindestens einem Zeichen.
          schema:
            $ref: '#/definitions/RefreshTokenDto'
      tags:
        - Authentication
      responses:
        default:
          description: AuthResponse
          schema:
            $ref: '#/definitions/AuthResponse'
  /register:
    post:
      description:
        Ein Benutzer registriert sich mit einem Satz von Registrierungsparametern.
        Bei erfolgreicher Registrierung empfängt der Benutzer eine E-Mail mit
        einem Registrierungslink. Dieser kann einmalig verwendet werden. Danach
        kann sich der Benutzer anmelden.
      summary: Einen Benutzer registrieren [AllowAnonymous]
      operationId: registerUser
      parameters:
        - name: registerDto
          in: body
          required: true
          description: Registrierungsinformationen
          schema:
            $ref: '#/definitions/RegisterDto'
      tags:
        - Authentication
      responses:
        200:
          description: Die Operation war erfolgreich.
            Der Benutzer erhält eine E-Mail mit einem Bestätigungslink.
          schema:
            $ref: '#/definitions/RegisterResponse'
        default:
          description: Unerwarteter Fehler
          schema:
            $ref: '#/definitions/OpResult'
  /confirm:
    get:
      description:
        Diese Methode wird durch den Bestätigungslink aufgerufen.
      summary: Eine Benutzerregistrierung bestätigen [AllowAnonymous]
      operationId: confirmRegister
      parameters:
        - name: id
          in: query
          type: string
          required: true
          description: Userid
        - name: cnf
          in: query
          type: string
          required: true
          description: Confirmationtoken
      tags:
        - Authentication
      responses:
        200:
          description: Die Operation war erfolgreich.
          schema:
            $ref: '#/definitions/ConfirmResponse'
        default:
          description: Unerwarteter Fehler
          schema:
            $ref: '#/definitions/OpResult'
  /recoverPassword:
    post:
      description:
        Ein Benutzer hat das Passwort vergessen und möchte ein neues definieren.
        Der Benutzer bekommt auf seine E-Mail Adresse eine Mail mit einem Passwortresetcode.
        Den Code muss er bei der SetPassword-Operation mitgeben.
      summary: Passwort wiederherstellen [AllowAnonymous]
      operationId: recoverPassword
      parameters:
        - name: recoverPasswordParams
          in: body
          required: true
          description: Wiederherstellungsparameter
          schema:
            $ref: '#/definitions/RecoverPasswordParams'
      tags:
        - Authentication
      responses:
        200:
          description: Die Operation war erfolgreich.
            Der Benutzer erhält eine E-Mail mit einem Passwortresetcode.
          schema:
            $ref: '#/definitions/RecoverPasswordResponse'
        default:
          description: Unerwarteter Fehler
          schema:
            $ref: '#/definitions/OpResult'
  /recoverUsername:
    post:
      description:
        Ein Benutzer hat seinen Benutzernamen vergessen.
        Nach Ausführung dieser Operation bekommt der Benutzer auf seine E-Mail Adresse 
        eine E-Mail mit seinem Benutzernamen.
      summary: Abfrage des Usernamens [AllowAnonymous]
      operationId: recoverUsername
      parameters:
        - name: recoverUsernameParams
          in: body
          required: true
          description: Wiederherstellungsparameter
          schema:
            $ref: '#/definitions/RecoverUsernameParams'
      tags:
        - Authentication
      responses:
        200:
          description: Die Operation war erfolgreich.
            Der Benutzer erhält eine E-Mail mit seinem Benutzernamen.
          schema:
            $ref: '#/definitions/RecoverUsernameResponse'
        default:
          description: Unerwarteter Fehler
          schema:
            $ref: '#/definitions/OpResult'
  /setPassword:
    post:
      description:
        Der Benutzer muss einen Passwortresetcode anfordern mit Operation *recoverPassword*.
        Der Passwortresetcode wird an die E-Mail Adresse des Benutzers geliefert.
        Der Benutzer setzt ein neues Passwort zusammen mit dem Passwortresetcode.
      summary: Ein Benutzer setzt ein neues Passwort [AllowAnonymous]
      operationId: setPassword
      parameters:
        - name: setPasswordParams
          in: body
          required: true
          description: Wiederherstellungsparameter
          schema:
            $ref: '#/definitions/SetPasswordParams'
      tags:
        - Authentication
      responses:
        200:
          description: Die Operation war erfolgreich.
          schema:
            $ref: '#/definitions/SetPasswordResponse'
        default:
          description: Unerwarteter Fehler
          schema:
            $ref: '#/definitions/OpResult'
  /profiles:
    get:
      description: |
        Abfragen des eigenen Profils. Nur mit Admin-Rolle möglich.
      summary:
        Abfrage aller Profile
      operationId: getProfiles
      tags:
        - Profile
      responses:
        200:
          description: Die Operation war erfolgreich.
          schema:
            $ref: '#/definitions/GetProfilesResponse'
        default:
          description: Unerwarteter Fehler
          schema:
            $ref: '#/definitions/OpResult'
  /profiles/myprofile:
    get:
      description: |
        Abfragen des eigenen Profils.
      summary:
        Abfrage des eigenen Profils
      operationId: getMyProfile
      tags:
        - Profile
      responses:
        200:
          description: Die Operation war erfolgreich.
          schema:
            $ref: '#/definitions/GetProfileResponse'
        default:
          description: Unerwarteter Fehler
          schema:
            $ref: '#/definitions/OpResult'
  /profiles/{userid}:
    get:
      description: |
        Abfragen des Profils eines anderen Benutzers. Nur mit Admin-Rolle möglich.
      summary:
        Abfrage eines Benutzerprofiles
      operationId: getProfile
      tags:
        - Profile
      parameters:
        - name: userid
          in: path
          description: User Id
          required: True
          type: string
      responses:
        200:
          description: Die Operation war erfolgreich.
          schema:
            $ref: '#/definitions/GetProfileResponse'
        default:
          description: Unerwarteter Fehler
          schema:
            $ref: '#/definitions/OpResult'
  /punches:
    get:
      description: |
        - [x] this operation is for test purposes
        - [x] it returns the complete database entity 
      summary: Retrieves all punches of current user
      operationId: getPunches
      produces:
        - application/json
      tags:
        - Temporary
      responses:
        200:
          description: An array of products
          schema:
            type: array
            items:
              $ref: '#/definitions/PunchDto'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/OpResult'
  /punches/day:
    get:
      description: |
        Get all punches of selected day for current user
        If no day selector specified, return today
      summary: Retrieves all punches of current user of selected day
      operationId: getDay
      produces:
        - application/json
      tags:
        - Punches
      parameters:
        - name: day
          in: query
          description: The day selector [1 .. 31]
          required: False
          type: number
          format: integer
        - name: month
          in: query
          description: The month number selector [1 .. 12]
          required: False
          type: number
          format: integer
        - name: year
          in: query
          description: The year number selector [2015 .. 2099]
          required: False
          type: number
          format: integer
      responses:
        200:
          description: An day punches object
          schema:
            $ref: '#/definitions/DayResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/OpResult'
  /punches/week:
    get:
      description: |
        Get all punches of selected week and year for current user
        If no week selector specified, return current week
      summary: Retrieves all punches of current user selected week
      operationId: getWeek
      produces:
        - application/json
      tags:
        - Punches
      parameters:
        - name: week
          in: query
          description: The week number selector
          required: False
          type: number
          format: integer
        - name: year
          in: query
          description: The year number selector [2015 .. 2099]
          required: False
          type: number
          format: integer
      responses:
        200:
          description: A week punches object
          schema:
            $ref: '#/definitions/WeekResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/OpResult'
  /punches/month:
    get:
      description: |
        Get all punches of selected month and year for current user
        If no month selector specified, return current month
      summary: Retrieves all punches of current user of selected month
      operationId: getMonth
      produces:
        - application/json
      tags:
        - Punches
      parameters:
        - name: month
          in: query
          description: The month number selector [1 .. 12] 
          required: False
          type: number
          format: integer
        - name: year
          in: query
          description: The year number selector [2015 .. 2099]
          required: False
          type: number
          format: integer
      responses:
        200:
          description: A month punches object
          schema:
            $ref: '#/definitions/MonthResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/OpResult'
  /punches/year:
    get:
      description: |
        Get all punches of selected year for current user
        If no year selector specified, return current year
      summary: Retrieves all punches of current user of selected year
      operationId: getYear
      produces:
        - application/json
      tags:
        - Punches
      parameters:
        - name: year
          in: query
          description: The year number selector [2015 .. 2099] 
          required: False
          type: number
          format: integer
      responses:
        200:
          description: A year punches object
          schema:
            $ref: '#/definitions/YearResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/OpResult'
  /punches/punch/In:
    post:
      description: |
        Erzeugt einen Zeitstempel. Falls die Monatsabrechnung des aktuellen Monats noch
        nicht existiert, wird eine Monatsabrechung eröffnet mit dem Status *open*.
      summary: Erzeugt einen Zeitstempel
      operationId: punchIn
      tags:
        - Punches
      responses:
        200:
          description: Liefert die Tagesstempel zurück
          schema:
            $ref: '#/definitions/DayResponse'
        default:
          description: Unexpected error
          schema:
              $ref: '#/definitions/OpResult'
  /punches/punch/Out:
    post:
      description: |
        Erzeugt einen Zeitstempel. Falls die Monatsabrechnung des aktuellen Monats noch
        nicht existiert, wird eine Monatsabrechung eröffnet mit dem Status *open*.
      summary: Erzeugt einen Zeitstempel
      operationId: punchOut
      tags:
        - Punches
      responses:
        200:
          description: Liefert die Tagesstempel zurück
          schema:
            $ref: '#/definitions/DayResponse'
        default:
          description: Unexpected error
          schema:
              $ref: '#/definitions/PunchResponse'
  /punchModify:
    post:
      description: |
        Modifiziert einen Zeitstempel des aktuellen Benutzers.
        Die Monatsabrechnung muss im Status *open* sein
        damit der Benutzer modifizieren kann.
      summary: Modifiziert einen Zeitstempel
      operationId: punchModify
      tags:
        - Punches
      parameters:
        - name: modifyPunchDto
          in: body
          schema:
            $ref: '#/definitions/ModifyPunchDto'
      responses:
        default:
          description: Unexpected error
          schema:
              $ref: '#/definitions/PunchResponse'
  /punchDelete:
    delete:
      description: |
        Löscht einen Zeitstempel des aktuellen Benutzers.
        Die Monatsabrechnung muss im Status *open* sein
        damit der Benutzer löschen kann.
      summary: Löscht einen Zeitstempel
      operationId: punchDelete
      tags:
        - Punches
      parameters:
        - name: deletePunchDto
          in: body
          schema:
            $ref: '#/definitions/DeletePunchDto'
      responses:
        default:
          description: Unexpected error
          schema:
              $ref: '#/definitions/OpResult'
  /punchModifyAdmin:
    post:
      description: | 
        Modifiziert einen Zeitstempel eines beliebigen Benutzers.
        Die Monatsabrechnung muss im Status *openAdmin* sein.
      summary: Modifiziert einen Zeitstempel
      operationId: punchModifyAdmin
      tags:
        - Punches
      parameters:
        - name: modifyPunchAdminDto
          in: body
          schema:
            $ref: '#/definitions/ModifyPunchAdminDto'
      responses:
        default:
          description: Unexpected error
          schema:
              $ref: '#/definitions/PunchResponse'
  /punchSetStatusAdmin:
    post:
      description: |
        Setzt den Status der Monatsabrechnung eines Benutzers. Der Status kann folgende Werte einnehmen:
        - *open*
        - *openAdmin*
        - *closed*
      summary: Setzt den Status der Monatsabrechung
      operationId: punchSetStatusAdmin
      tags:
        - Punches
      parameters:
        - name: setStatusAdminDto
          in: body
          schema:
            $ref: '#/definitions/SetStatusAdminDto'
      responses:
        default:
          description: Unexpected error
          schema:
              $ref: '#/definitions/PunchResponse'
      
################################################################################
#                         Top - Level - Definitions                            #
################################################################################      
definitions:
  AuthResponse:
    type: object
    properties:
      status:
        $ref: '#/definitions/OpResult'
      validFor:
        type: integer
        description:
          The token will be valid for validFor seconds
      id:
        type: string
        description:
          The user id
      token:
        type: string
        description: 
          Ein Authentifizierungstoken mit dem alle folgenden Aufrufe authentifiziert werden.
      refreshtoken:
        type: string
        description: 
          Ein RefreshToken mit dem der token erneuert werden kann.
  CredentialDto:
    type: object
    properties:
      client_type:
        type: string
        description: Der Client-Typ 'web', 'ionic'
      username:
        type: string
        format: email
        description: Die E-Mail Adresse 1 .. 160 Zeichen. Wird benötigt für die Bestätigung der Kontoerstellung.
      password:
        type: string
        description: Das Passwort 1 .. 80 Zeichen. Wird für die Anmeldung benötigt.
  RefreshTokenDto:
    type: object
    properties:
      refresh_token:
        type: string
        description: Der Refresh Token
  RegisterDto:
    type: object
    properties:
      firstname:
        type: string
        description: Der Vorname, 1 .. 80 Zeichen
      name:
        type: string
        description: Der Name, 1 .. 80 Zeichen
      email:
        type: string
        format: email
        description: Die E-Mail Adresse 1 .. 160 Zeichen. Wird benötigt für die Bestätigung der Kontoerstellung.
      username:
        type: string
        description: Der Benutzername 1 .. 80 Zeichen. Wird für das Anmeldung benötigt.
      password:
        type: string
        description: Das Passwort 1 .. 80 Zeichen. Wird für die Anmeldung benötigt.
  RegisterResponse:
    type: object
    properties:
      status:
        $ref: '#/definitions/OpResult'
  ConfirmResponse:
    type: object
    properties:
      status:
        $ref: '#/definitions/OpResult'
  RecoverPasswordParams:
    type: object
    properties:
      email:
        type: string
        format: email
        description: Die E-Mail Adresse 1 .. 160 Zeichen. Wird benötigt für die Bestätigung der Kontoerstellung.
      username:
        type: string
        description: Der Benutzername 1 .. 80 Zeichen. Wird für das Anmeldung benötigt.
  RecoverUsernameParams:
    type: object
    properties:
      email:
        type: string
        format: email
        description: Die E-Mail Adresse 1 .. 160 Zeichen. Wird benötigt für die Bestätigung der Kontoerstellung.
  RecoverPasswordResponse:
    type: object
    properties:
      status:
        $ref: '#/definitions/OpResult'
  RecoverUsernameResponse:
    type: object
    properties:
      status:
        $ref: '#/definitions/OpResult'
  SetPasswordParams:
    type: object
    properties:
      code:
        type: string
        description: Der Passwortresetcode.
      username:
        type: string
        description: Der Benutzername 1 .. 80 Zeichen. Wird für das Anmeldung benötigt.
      password:
        type: string
        description: Das Passwort 1 .. 80 Zeichen. Wird für die Anmeldung benötigt.
  SetPasswordResponse:
    type: object
    properties:
      status:
        $ref: '#/definitions/OpResult'
  GetProfilesResponse:
    type: object
    properties:
      status:
        $ref: '#/definitions/OpResult'
  GetProfileResponse:
    type: object
    properties:
      status:
        $ref: '#/definitions/OpResult'
  PunchResponse:
    type: object
    properties:
      status:
        $ref: '#/definitions/OpResult'
      punches:
        $ref: '#/definitions/DayPunchesDto'
  DayResponse:
    type: object
    properties:
      status:
        $ref: '#/definitions/OpResult'
      punches:
        $ref: '#/definitions/DayPunchesDto'
  WeekResponse:
    type: object
    properties:
      status:
        $ref: '#/definitions/OpResult'
      punches:
        $ref: '#/definitions/WeekPunchesDto'
  MonthResponse:
    type: object
    properties:
      status:
        $ref: '#/definitions/OpResult'
      punches:
        $ref: '#/definitions/MonthPunchesDto'
  YearResponse:
    type: object
    properties:
      status:
        $ref: '#/definitions/OpResult'
      punches:
        $ref: '#/definitions/YearPunchesDto'
  ModifyPunchDto:
    type: object
    properties:
      punchid:
        type: string
      timedec:
        type: number
        format: float
      direction:
        type: boolean
  DeletePunchDto:
    type: object
    properties:
      punchid:
        type: string
  ModifyPunchAdminDto:
    type: object
    properties:
      punchid:
        type: string
      userid:
        type: string
      timedec:
        type: number
        format: float
      direction:
        type: boolean
  SetStatusAdminDto:
    type: object
    properties:
      userid:
        type: string
      status:
        type: string

################################################################################
#                                 Sub - Definitions                            #
################################################################################              
  YearPunchesDto:
    type: object
    properties:
      user:
        type: string
        description: Boid of user
      year:
        type: integer
        description: The year expressed as 1 to 9999
      punches:
        type: array
        items:
          $ref: '#/definitions/MonthPunchesDto'
  MonthPunchesDto:
    type: object
    properties:
      user:
        type: string
        description: Boid of user
      month:
        type: integer
        description: The month expressed as value between 1 and 12
      year:
        type: integer
        description: The year expressed as 1 to 9999
      punches:
        type: array
        items:
          $ref: '#/definitions/DayPunchesDto'
  WeekPunchesDto:
    type: object
    properties:
      user:
        type: string
        description: Boid of user
      week:
        type: integer
        description: The week expressed as 1 to 53
      year:
        type: integer
        description: The year expressed as 1 to 9999
      dayPunches:
        type: array
        items:
          $ref: '#/definitions/DayPunchesDto'
  DayPunchesDto:
    type: object
    properties:
      userboid:
        type: string
        description: Boid of user
      day:
        type: integer
        description: The day expressed as value betwenn 1 and 31
      month:
        type: integer
        description: The month expressed as value between 1 and 12
      year:
        type: integer
        description: The year expressed as 1 to 9999
      punches:
        type: array
        items:
          $ref: '#/definitions/PunchRowDto'
      daytotal:
        type: number
        format: float
  PunchRowDto:
    type: object
    properties:
      enter:
        $ref: '#/definitions/PunchDto'
      leave:
        $ref: '#/definitions/PunchDto'
      rowTotal:
        type: number
        format: float
        description: Time between enter and leav
  PunchDto:
    type: object
    properties:
      time:
        type: string
        format: date-time
      timedec:
        type: number
        format: float
      direction:
        type: boolean
        description: True means enter work, False means leave work.
      created:
        type: string
        format: date-time
        description: The timestamp of the creation of this value.
      updated:
        type: string
        format: date-time
        description: The timestamp of the last update of this value.
      punchid:
        type: string
  OpResult:
    type: object
    properties:
      success:
        type: boolean
        description: True wenn die Operation erfolgreich war
      result:
        type: string
        description: Eine Text-Meldung
